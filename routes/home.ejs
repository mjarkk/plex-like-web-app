<div class="home-vue">
  <div class="side" v-cloak>
    <div v-for="app in apps" class="clickicon" v-html="app.icon" v-on:click="activeapp = app.name" v-bind:class="{selected: activeapp == app.name}">
      {{ app.icon }}
    </div>
  </div>
  <div class="content" v-cloak>
    <div class="header">
      <div class="item">{{ appname }}</div>
    </div>
    <div class="header2">
      <h1>{{ activeapp.capitalize() }}</h1>
    </div>
    <div class="app-content app-content-images" v-if="activeapp == 'images'">
      <div class="recentimgs">
        <h2>RECENT</h2>
      </div>
      <div class="allimgs">
        <h2>ALL IMAGES</h2>
        <div class="imgholderbig">
          <div class="year" v-for="(year, yearname) in images.imagesindexes">
            <div class="month" v-for="(month, monthname) in year">
              <div class="day" v-for="(day, dayname) in month">
                <p class="dayname-title">{{ ReturnDay(yearname, monthname, dayname) }}</p>
                <div class="roww" v-for="row in day.rows">
                  <div class="img" v-for="img in row" v-bind:style="{'width': ((Math.round(images.baseimgheight * img.aspect) > 700) ? 700 : Math.round(images.baseimgheight * img.aspect)) + 'px'}">
                    <div class="imgholder" v-if="images.images[img.id].show" :style="{'background-image': `url(${images.images[img.id].url})`}">
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="app-content" v-if="activeapp == 'settings' && settingsloaded">
      <!-- settings -->
      <h2>Server</h2>
      <div class="row">
        <p>Port</p>
        <input type="number" placeholder="port" v-model="settings.server.port">
      </div>
      <div class="row" v-if="settings.server.porterr">
        <p class="err">{{ settings.server.porterr }}</p>
      </div>
      <div class="row">
        <p>Dev</p>
        <div class="switch">
          <p v-bind:class="{active: settings.server.dev == true}" v-on:click="settings.server.dev = true">On</p>
          <p v-bind:class="{active: settings.server.dev == false}" v-on:click="settings.server.dev = false">Off</p>
        </div>
      </div>
      <div class="row">
        <p>Images direcory</p>
        <input type="text" placeholder="direcory" v-model="settings.server.imagedirs">
      </div>
      <div class="row" v-if='settings.server.imagedirserr'>
        <p class="err">{{ settings.server.imagedirserr }}</p>
      </div>
      <div class="row">
        <p>Movie direcory</p>
        <input type="text" placeholder="direcory" v-model="settings.server.moviedirs">
      </div>
      <div class="row" v-if='settings.server.moviedirserr'>
        <p class="err">{{ settings.server.moviedirserr }}</p>
      </div>
      <div class="row">
        <p>Music direcory</p>
        <input type="text" placeholder="direcory" v-model="settings.server.musicdirs">
      </div>
      <div class="row" v-if='settings.server.musicdirserr'>
        <p class="err">{{ settings.server.musicdirserr }}</p>
      </div>
      <div class="users">
        <h3>Users</h3>
        <div class="item" v-for="user of settings.server.users">
          {{ user.username }}
        </div>
      </div>
      <div class="button-holder">
        <button v-bind:disabled="settings.server.updatebtndisabled" type="button" v-on:click="updatesettings()">Update</button>
      </div>
      <h2>Client</h2>
    </div>
  </div>
</div>
